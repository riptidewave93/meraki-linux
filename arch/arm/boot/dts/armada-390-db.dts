/*
 * Device Tree file for Marvell Armada 390 Development Board
 * (DB-88F6920)
 *
 * Copyright (C) 2014 Marvell
 *
 * Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is licensed under the terms of the GNU General Public
 *     License version 2.  This program is licensed "as is" without
 *     any warranty of any kind, whether express or implied.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "armada-390.dtsi"

/ {
	model = "Marvell Armada 390 Development Board";
	compatible = "marvell,a390-db", "marvell,armada390", "marvell,armada380";

	chosen {
		bootargs = "console=ttyS0,115200 earlyprintk";
	};

	memory {
		device_type = "memory";
		reg = <0x00000000 0x10000000>; /* 256 MB */
	};

	soc {
		ranges = <MBUS_ID(0xf0, 0x01) 0 0xf1000000 0x100000
			  MBUS_ID(0x01, 0x1d) 0 0xfff00000 0x100000
							/* CESA0: PHYS=0xf1100000 size 64K - used for CPU Idel WA */
			  MBUS_ID(0x09, 0x19) 0 0xf1100000 0x10000
							/* CESA1: PHYS=0xf1110000 - used for CPU Idel WA */
			  MBUS_ID(0x09, 0x15) 0 0xf1110000 0x10000
							/* nss window, 16M */
			  MBUS_ID(NSS_TARGET_ID, NSS_REGS_ATTR)  0 0xf5000000 NSS_REGS_SIZE
							/* mac_nic window, (nss internal window) 128M */
			  MBUS_ID(NSS_TARGET_ID, NSS_SPACE_ATTR) 0 0xD0000000 NSS_SPACE_SIZE>;
		internal-regs {
			spi@10680 {
				status = "okay";
				pinctrl-0 = <&spi1_pins>;
				pinctrl-names = "default";

				spi-flash@1 {
					#address-cells = <1>;
					#size-cells = <1>;
					compatible = "n25q128a13", "jedec,spi-nor";
					reg = <0>; /* Chip select 0 */
					spi-max-frequency = <108000000>;

					partition@0 {
						label = "U-Boot";
						reg = <0 0x400000>;
					};
					partition@400000 {
						label = "Filesystem";
						reg = <0x400000 0xc00000>;
					};
				};
			};

			flash@d0000 {
				status = "okay";
				pinctrl-0 = <&nand_pins>;
				pinctrl-names = "default";
				num-cs = <1>;
				marvell,nand-keep-config;
				marvell,nand-enable-arbiter;
				nand-on-flash-bbt;
				nand-ecc-strength = <8>;
				nand-ecc-step-size = <512>;

				partition@0 {
					label = "U-Boot";
					reg = <0 0x800000>;
				};
				partition@800000 {
					label = "Linux";
					reg = <0x800000 0x800000>;
				};
				partition@1000000 {
					label = "Filesystem";
					reg = <0x1000000 0x3f000000>;
				};
			};

			i2c@11000 {
				status = "okay";
				clock-frequency = <100000>;
			};

			i2c@11100 {
				status = "okay";
				clock-frequency = <100000>;
			};

			i2c@11200 {
				status = "okay";
				clock-frequency = <100000>;
			};

			i2c@11300 {
				status = "okay";
				clock-frequency = <100000>;
			};

			mdio {
				phy1: ethernet-phy@1 {
					reg = <5>;
				};

				phy2: ethernet-phy@2 {
					reg = <4>;
				};

				phy3: ethernet-phy@3 {
					reg = <6>;
				};
			};

			serial@12000 {
				status = "okay";
			};

			usb@58000 {
				status = "okay";
			};

			sdhci@d8000 {
				clock-frequency = <200000000>;
				broken-cd;
				wp-inverted;
				bus-width = <8>;
				status = "okay";
				no-1-8-v;
			};

			usb3@f8000 {
				status = "okay";
			};
		};

		nss_complex {
			status = "okay";
			pinctrl-0 = <&smi_nss_pins>;
			pinctrl-names="default";
		};

		gop {
			emac0: mac0 {
				phy-mode = "rxaui";
			};

			emac1: mac1 {
				phy = <&phy1>;
				phy-mode = "sgmii";
			};

			emac2: mac2 {
				phy = <&phy2>;
				phy-mode = "sgmii";
			};

			emac3: mac3 {
				phy = <&phy3>;
				phy-mode = "sgmii";
			};
		};

		pp3_platform {
			status = "okay";

			nic@0 {
				status = "okay";
				emac-data = <&emac0>;
			};

			nic@1 {
				status = "okay";
				emac-data = <&emac1>;
			};

			nic@2 {
				status = "okay";
				emac-data = <&emac2>;
			};

			nic@3 {
				status = "okay";
				emac-data = <&emac3>;
			};

			nss@0 {
				status = "okay";
			};
		};

		pcie-controller {
			status = "okay";
			/*
			 * The three PCIe units are accessible through
			 * standard PCIe slots on the board.
			 */
			pcie@1,0 {
				/* Port 0, Lane 0 */
				status = "okay";
			};
			pcie@2,0 {
				/* Port 1, Lane 0 */
				status = "okay";
			};
			pcie@3,0 {
				/* Port 2, Lane 0 */
				status = "okay";
			};
		};
	};
};
